stephen5.ng
2025/07/14 06:53
People enjoyed the cubes yesterday, but it seems like there's always so much that could have been better in hindsight! There was a fair amount of latency yesterday, for both Block Words and Likes/Dislikes. I wonder if the MQTT broker on the Pi is slow--I noticed it was low on disk space last week. Should have tried switching the broker to my macbook. I do use a lot of retained messages, in case a cube dies (loose cable or dead battery) and comes back up. I should measure mqtt roundtrip time. I did check the load on the pi yesterday and it seemed ok (1-ish), and diskfull would probably cause consistent failures, rather than inconsistent slowness? Also, one failure mode I think I saw in likes/dislikes is there was delay switching to a new picture--and then it would suddenly switch to one and then the next picture. If it was MQTT wouldn't it just go to the latest image? I need to take @Brett 's advice and log more and persist the data. And take some videos so I know what I'm seeing and can correlate it with the logs. I remember taking a quick look at the dashboard and the UDP/ ICMP ping times seemed okay but I was tired, maybe I read them wrong. It was definitely a very busy wifi area, so wifi is still a suspect. I was struggling to get the Pi working with the projector that was provided (I should have packed the one I bought from ebay that srawlings recommended!!) so I just ran it on my Mac, so no DDR. But joystick mode worked just fine, there were a lot of head-to-head games. https://www.instagram.com/stories/direct/3675989588543049599_4063330 https://www.instagram.com/stories/caramandel/3676038715167582492/



lugubrious.octopus
2025/07/14 07:21
Mosquitto is super fast in my experience, even with a massive flood of lots of (small) messages. I do know that you push pictures over MQTT so it might not be optimized for big messages, maybe there's a tuning parameter somewhere in the config file to increase some buffers there?

lugubrious.octopus
2025/07/14 07:22
The multiple photo situation does make sense to me. MQTT is a queue, so it processes older messages before newer ones if there's a lag.

stephen5.ng
2025/07/14 07:23
Ah I see. The pictures are 8192 bytes, is that big?

lugubrious.octopus
2025/07/14 07:23
I feel like lag in MQTT processing is much (much) more likely to be on the cube side than the host side, but if it went away when you switched to the Mac, that kinda disproves that.

stephen5.ng
2025/07/14 07:24
I don't ever remember noticing a cube -> MacBook lag, it seems assymetric.

lugubrious.octopus
2025/07/14 07:24
@stephen5.ng
2025/07/14 07:23
Ah I see. The pictures are 8192 bytes, is that big?
On the larger side; I think most MQTT applications are pushing just a short string or number, or maybe a modest JSON blob. So "default" is probably 2k or less for most people

lugubrious.octopus
2025/07/14 07:25
@stephen5.ng
2025/07/14 07:24
I don't ever remember noticing a cube -> MacBook lag, it seems assymetric.
I would expect the delay to be server->cube messages. The cube has to allocate memory to buffer the incoming messages, grind through processing, then ask the server for more etc

lugubrious.octopus
2025/07/14 07:25
when the cube is messaging up to the server I imagine it probably fires off very quickly

lugubrious.octopus
2025/07/14 07:26
I assume you're using PubSubClient on the cubes?

stephen5.ng
2025/07/14 07:30
I'm using https://github.com/plapointe6/EspMQTTClient which is a wrapper around PubSubClient

lugubrious.octopus
2025/07/14 07:31
And I assume you've got a setMaxPacketSize() call for at least like, 10k or so

stephen5.ng
2025/07/14 07:32
11999 bytes IIRC PubSubClient allocates memory for every message, so I could fork it and just allocate it once

lugubrious.octopus
2025/07/14 07:33
one wrinkle is that this EspMQTTClient library instantiates an Arduino string for every received message, which I think makes a copy of the data in memory. Which is sane for user friendliness but maybe not what you want when pushing 8k messages around

lugubrious.octopus
2025/07/14 07:35
One way you could test this out is to make an AI agent write a simple console app running on your Mac that emulates a cube

lugubrious.octopus
2025/07/14 07:35
or even a set of cubes

lugubrious.octopus
2025/07/14 07:36
feed the agent your cube Arduino code and ask it to make a nice curses emulator for you

lugubrious.octopus
2025/07/14 07:36
Then you can play with clients that have basically unlimited resources, and isolate if you have a server issue or a client issue

stephen5.ng
2025/07/14 07:37
yeah good idea

lugubrious.octopus
2025/07/14 07:37
the fidelity doesnt have to be perfect for the test client to work, just a simple test harness that drives the MQTT bits

lugubrious.octopus
2025/07/14 07:37
My instinct is that it's on the client because I've definitely had issues myself with me flooding devices past their ability to process through everything

lugubrious.octopus
2025/07/14 07:37
But that's just a gut check and would be nice to prove that before I send you on a wild goose chase of upending your network stack

lugubrious.octopus
2025/07/14 07:38
btw in the process of poking around here it seems the classic PubSubClient is now unmaintained since 2020

lugubrious.octopus
2025/07/14 07:38
And there is a new fork from someone who got annoyed by that and merged all the moldy PRs

lugubrious.octopus
2025/07/14 07:38
https://github.com/hmueller01/pubsubclient3

lugubrious.octopus
2025/07/14 07:38
I should probably look at adopting this

aubilenon
2025/07/14 07:38
I was getting like 300ms pings on my own temporary, no-uplink WiFi network so my guess is it was just a bad rf environment and you were having to retry packets occasionally when you saw the big lags

aubilenon
2025/07/14 07:45
(From a MacBook to an esp32 via a similar but different color AP)

aubilenon
2025/07/14 07:48
Do you connect the server to the ap with cat6? The esp32 is presumably the worse antenna but if stuffâ€™s noisy and bad it could avoid some of that.

egnor
2025/07/14 11:19
I feel like I really need to figure out an end to end latency analyzer for ESP32 mqtt wifi

aubilenon
2025/07/14 11:34
What about just ping but through mqtt? (Update a ping topic and see how long it takes for an ack topic to get updated)

brettkuehner
2025/07/14 12:05
You could also put some timestamps in the response so you could have an idea if the lag was in one direction or the other. That does require syncing clocks or other mechanisms to make them meaningful, though.

lugubrious.octopus
2025/07/14 12:15
simple solution would be a serial link between an ESP and a host

lugubrious.octopus
2025/07/14 12:15
trust the serial link is baseline latency... won't be zero, but close enough

aubilenon
2025/07/14 12:22
@lugubrious.octopus
2025/07/14 12:15
simple solution would be a serial link between an ESP and a host
Or digital gpio even

egnor
2025/07/14 13:04
@aubilenon
2025/07/14 11:34
What about just ping but through mqtt? (Update a ping topic and see how long it takes for an ack topic to get updated)
Yeah but I need to see which step contributes what to the latency and variance. Time-stamping and side channels are the obvious ways to deal with that

ebroder
2025/07/14 13:27
Can you just store the images in the firmware instead of shipping them over MQTT? More annoying if you need to swap them out, but makes the communication protocol and memory management much easier. I count 114 images in https://discord.com/channels/1215545818321522688/1220538313178353717/1391186213741924412 so at 8K each that's less than 1M of storage, and presumably your ESP32s have at least 4M to play with?

ebroder
2025/07/14 13:28
(If it's only 4M, might get tight if you want to partition for OTA updates)

ebroder
2025/07/14 13:32
I don't know for sure that'll help with latency issues, but one nice thing is that it gets your MQTT messages down under the size of a single TCP packet, so you don't have to worry about fragmentation

stephen5.ng
2025/07/14 13:34
hm, some of them are these https://a.co/d/cS0FDjj which only have 0.5M. But I probably have some 4M devices too. Worth a shot if I run Likes/Dislikes again.

stephen5.ng
2025/07/14 13:39
I need to get into the mentality of having logging/diagnostics that run all the time and I don't have to think about because when things get weird in the field, I'm much too busy and anxious to try to diagnose things on the fly.

ebroder
2025/07/14 13:41
Yeah one thing I miss from the Mystery Hunt radios whenever I'm doing other projects is that we had them all registered in an instance of [ThingsBoard](https://thingsboard.io/) which has a built-in telemetry time-series database, graphing capabilities, etc., etc. It's stupid overweight for basically anything else but it was amazing for that. I wanted to stream logs to ThingsBoard too but couldn't figure out how to make it work without causing random hangs elsewhere in the firmware. But I would *love* to have a lighter weight telemetry platform with similar features that I can just drop into projects

ebroder
2025/07/14 13:42
(I'm going to look but I'm pretty sure I wasn't smart enough to take a screenshot of any of the dashboards we had)

ebroder
2025/07/14 13:45
But yeah part of this was also that every time I added a new module to the codebase I would wire up any piece of telemetry I thought might be remotely plausible https://github.com/search?q=repo%3Amitmh2025%2Fradio%20things_send_telemetry_&type=code

ebroder
2025/07/14 13:48
@stephen5.ng
2025/07/14 13:34
hm, some of them are these https://a.co/d/cS0FDjj which only have 0.5M. But I probably have some 4M devices too. Worth a shot if I run Likes/Dislikes again.
FWIW I..don't know if I believe that Amazon listing? (a) That's RAM not flash, and (b) those look like off-brand modules, but it doesn't look like Espressif ever made modules with less than 4M of flash and I assume these are knockoffs of the Espressif designs: https://www.espressif.com/en/products/modules?id=ESP32

rhysara
2025/07/14 13:48
@stephen5.ng
2025/07/14 13:34
hm, some of them are these https://a.co/d/cS0FDjj which only have 0.5M. But I probably have some 4M devices too. Worth a shot if I run Likes/Dislikes again.
I really loved it with the icons, I feel like you need to start an image library so that if you end up running it in future for people with overlapping interests you can just reuse the pictures - unfortunately Shuai's dis/likes are probably way more specific than what a lot of people would give you so I'm not sure how useful her images will prove going forward.

ebroder
2025/07/14 13:50
I don't have any ESP32 boards with me to verify, but maybe try plugging it in and running `pio pkg exec -p "tool-esptoolpy" -- esptool.py flash_id`?

egnor
2025/07/14 13:51
@ebroder
2025/07/14 13:41
Yeah one thing I miss from the Mystery Hunt radios whenever I'm doing other projects is that we had them all registered in an instance of [ThingsBoard](https://thingsboard.io/) which has a built-in telemetry time-series database, graphing capabilities, etc., etc. It's stupid overweight for basically anything else but it was amazing for that. I wanted to stream logs to ThingsBoard too but couldn't figure out how to make it work without causing random hangs elsewhere in the firmware. But I would *love* to have a lighter weight telemetry platform with similar features that I can just drop into projects
If you find one let me know. What would it look like for your ideals? (I've never used ThingBoard)

ebroder
2025/07/14 13:52
@egnor
2025/07/14 13:51
If you find one let me know. What would it look like for your ideals? (I've never used ThingBoard)
I think what I want is an InfluxDB install + an MQTT -> InfluxDB bridge where the whole thing was ~trivial to stand up (with that last part probably being the most important and hardest to achieve)

egnor
2025/07/14 13:52
@rhysara
2025/07/14 13:48
I really loved it with the icons, I feel like you need to start an image library so that if you end up running it in future for people with overlapping interests you can just reuse the pictures - unfortunately Shuai's dis/likes are probably way more specific than what a lot of people would give you so I'm not sure how useful her images will prove going forward.
Yeah the icons are clutch

egnor
2025/07/14 13:52
@ebroder
2025/07/14 13:52
I think what I want is an InfluxDB install + an MQTT -> InfluxDB bridge where the whole thing was ~trivial to stand up (with that last part probably being the most important and hardest to achieve)
And telemetry boils down to "publish an MQTT message" ?

ebroder
2025/07/14 13:52
@egnor
2025/07/14 13:52
And telemetry boils down to "publish an MQTT message" ?
Yeah, that's what ThingsBoard is doing. Doesn't necessarily need to specifically be InfluxDB specifically, that's just the shape of product I would want

egnor
2025/07/14 13:53
I've seen influxdb mentioned a lot but have never dived into it because I always felt like I need another DB in my life like I need another wart on my nose

ebroder
2025/07/14 13:53
I guess also, ahem, because I'm not a reasonable person, "free cloud-hosted service" would actually be the thing I want here

egnor
2025/07/14 13:54
@ebroder
2025/07/14 13:53
I guess also, ahem, because I'm not a reasonable person, "free cloud-hosted service" would actually be the thing I want here
supported by commercial breaks in your telemetry dashboard!

egnor
2025/07/14 13:56
THESE LOGS BROUGHT TO YOU BY COGS BY CLOCKWORK DOG "Don't like staring at MQTT logs? Just give up and use COGS"

lugubrious.octopus
2025/07/14 13:57
honestly this sounds like the monetization idea i need

lugubrious.octopus
2025/07/14 13:58
ship my turnkey platform, have the OSS version free, and be like, "is this getting exasperating? use our fancy web UI on top of this core platform"

ebroder
2025/07/14 13:58
@sng I guess if you really want to overengineer a solution, instead of building the images into the firmware you could include a SPIFFS partition and have some protocol for fetching images from the server (over HTTP or whatever) and caching them in SPIFFS

lugubrious.octopus
2025/07/14 13:59
for web stuff logrocket is absolutely phenomenal https://logrocket.com/pricing

lugubrious.octopus
2025/07/14 13:59
doesn't help with IoT but its an example of a business model that works. I fixed _so many_ bugs in my remote play hosted game thing with this.

lugubrious.octopus
2025/07/14 13:59
and their free tier is quite capable for limited session counts

lugubrious.octopus
2025/07/14 14:00


lugubrious.octopus
2025/07/14 14:00
what

egnor
2025/07/14 14:00
@lugubrious.octopus
2025/07/14 13:59
doesn't help with IoT but its an example of a business model that works. I fixed _so many_ bugs in my remote play hosted game thing with this.
We tried Amplitude for a while and I hated it and we just went to our own "ping a URL that adds to a logs DB" thing

egnor
2025/07/14 14:00
Struggling users I assume

egnor
2025/07/14 14:00
doesn't take much AI to detect struggles on my part

lugubrious.octopus
2025/07/14 14:01
@egnor
2025/07/14 14:00
Struggling users I assume
yeah, for sure. but the terminology makes it sound like a mousetrap feature

egnor
2025/07/14 14:01
just set the bit to 1, call it good

stephen5.ng
2025/07/14 14:01
@ebroder
2025/07/14 13:48
FWIW I..don't know if I believe that Amazon listing? (a) That's RAM not flash, and (b) those look like off-brand modules, but it doesn't look like Espressif ever made modules with less than 4M of flash and I assume these are knockoffs of the Espressif designs: https://www.espressif.com/en/products/modules?id=ESP32
> those look like off-brand modules I see The Radio used Feathers, and they have been recommended elsewhere too. Is it possible that switching to those will help?

lugubrious.octopus
2025/07/14 14:02
@egnor
2025/07/14 14:00
We tried Amplitude for a while and I hated it and we just went to our own "ping a URL that adds to a logs DB" thing
Logrocket does full GUI replay of every action the user takes, so it's like you're literally viewing their browser window. Really really useful for user journey stuff. Seems like Amplitude does that too? I don't really feel like logs in a DB are equivalently useful for me, but I'm typically very front end focused

egnor
2025/07/14 14:02
@lugubrious.octopus
2025/07/14 14:01
yeah, for sure. but the terminology makes it sound like a mousetrap feature
"when your customers are struggling to get out of your walled garden prison, automatically slowroll all bulk customer data downloads to prevent churn"

egnor
2025/07/14 14:03
@lugubrious.octopus
2025/07/14 14:02
Logrocket does full GUI replay of every action the user takes, so it's like you're literally viewing their browser window. Really really useful for user journey stuff. Seems like Amplitude does that too? I don't really feel like logs in a DB are equivalently useful for me, but I'm typically very front end focused
a lot of it was wanting to see which puzzles people took more time on and/or took hints on, also which of them tended to have all the players be active vs one player driving everything

egnor
2025/07/14 14:03
but we were building specific games not a platform like you

ebroder
2025/07/14 14:03
@stephen5.ng
2025/07/14 14:01
> those look like off-brand modules I see The Radio used Feathers, and they have been recommended elsewhere too. Is it possible that switching to those will help?
Ah the radio did not actually use Feathers. I included a Feather footprint for expandability (and, like, frankly, kind of as a joke?). The board was all custom, built around an ESP32-S3-MINI-1. There is an ESP32-S3-DevKitM-1/ESP32-S3-DevKitC-1 which are Official Espressif Boards, which are the devkits that are based around the ESP32-S3-MINI / ESP32-S3-WROOM. I don't think they necessarily are going to fix performance problems but IMO they're a bit more of a known quantity. (My concern with off-brand boards is that I feel like I've heard about quality issues, but if you've used and validated your boards then you've eliminated that). I only comment on them being off-brand because I can't track down what the specs are supposed to be